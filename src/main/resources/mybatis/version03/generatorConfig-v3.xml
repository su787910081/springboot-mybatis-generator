<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC
        "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!-- 加载配置文件，为下面读取数据库信息准备  居然不能正确读取到 application.yml 文件 -->
    <properties resource="application.properties"/>

    <!-- 指定数据库驱动的jdbc驱动jar包的位置 -->
    <!-- 不再需要，因为 jar 包已经在 classpath 中
    <classPathEntry location="./mysql-connector-java-5.1.40.jar" />
    -->

    <!-- defaultModelType="flat" 大数据字段，不分表 -->
    <context id="suyh" defaultModelType="hierarchical" targetRuntime="MyBatis3Simple">
        <!-- 指定数据库ID，目前我还不知道这个工具是怎么判断连接数据库的。所以在这里添加一下 -->
        <!-- 这里目前仅是用来做模糊查询的 -->
        <!-- 目前就两种，mysql/oracle -->
        <property name="dbId" value="oracle"/>
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <!-- 生成的 Java 文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 格式化 Java 代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化 XML 代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>

        <!-- 自定义属性 -->
        <!-- 自定义属性: 日期格式化 -->
        <property name="dateFormat" value="yyyy-MM-dd HH:mm:ss"/>

        <!-- 生成的entity，将implements Serializable -->
<!--        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>-->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        <plugin type="com.suyh.version03.plugin.custom.AnnotationPlugin">
            <!-- 自定义配置属性  -->
            <property name="ann_swagger" value="true"/>
            <property name="ann_format_date" value="true"/>
        </plugin>
        <plugin type="com.suyh.version03.plugin.custom.CommentPlugin">
            <!-- 自定义配置属性  -->
            <property name="author" value="suyh"/>
        </plugin>
        <!-- 通过自定义插件类生成自定义注解和接口 -->
        <!-- 自定义插件生成，可以参考博客：https://blog.csdn.net/u011781521/article/details/78695396 -->
        <plugin type="com.suyh.version03.plugin.custom.MappersPlugin">
            <!-- 这两个mapper 接口类是我提供并实现的。要添加的话，必须要实现对应的SQL XML 代码 -->
            <property name="mappers" value="com.suyh.version03.plugin.custom.SimpleMapper,com.suyh.version03.plugin.custom.LikeMapper"/>
            <!-- 添加swagger 注解 -->
            <property name="ann_swagger" value="true"/>
        </plugin>

        <!--数据库链接地址账号密码-->
        <jdbcConnection driverClass="oracle.jdbc.driver.OracleDriver"
                        connectionURL="jdbc:oracle:thin:@docker:1521:XE"
                        userId="AfterSales"
                        password="oracle_pwd">
            <!-- 对实体类添加注释映射到表的注释 -->
            <!-- 设置 useInformationSchema 属性为 true -->
            <property name="useInformationSchema" value="true"/>
            <!-- 针对oracle数据库，指定数据库为ORACLE 时如果没有这个配置，则注释拿不到的。 -->
            <property name="remarksReporting" value="true"/>
        </jdbcConnection>

        <!-- 类型转换 -->
        <javaTypeResolver>
            <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer
            true，把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal -->
            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
            <!-- 测试了一下，这个地方填false 还是比较好的 -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 生成实体的位置 -->
        <!-- targetProject 指定的目录必须存在 -->
        <javaModelGenerator targetPackage="com.suyh.model" targetProject="src/main/outer">
            <property name="enableSubPackages" value="true"/>
            <!-- 在实体类的set 方法中直接trim() -->
            <property name="trimStrings" value="true"/>
            <!-- 添加实体基类 -->
            <!-- 1. 若有重复的字段，则不会添加。但是必须属性和类型完全匹配。 -->
            <!-- 2. 只能处理当前父类的字段，若此类还有父类，则这个父类里面的属性将不会被检查到  -->
            <!-- 3. 我们还可以对指定表添加父类。就像下面的crm_customer_info 一样添加父类属性标签 -->
            <!-- 4. 如果父类已经 implement Serializable  上面就不要配置这个插件了 -->
            <!-- 5. 这个类必须要添加到我的这个工程中来。类名路径必须完全一样。 -->
            <property name="rootClass" value="com.suyh.version03.model.BaseModel"/>
        </javaModelGenerator>

        <!-- 生成mapxml文件 -->
        <!-- 这个目录必须存在，若不存在则不会生成对应的文件。好像不是必须存在呢。不过先建好为好嘛。 -->
        <!-- 上面说的目录必须存在，应该说的是 targetProject 属性所指定的目录必须存在。 -->
        <sqlMapGenerator targetPackage="resources/mybatis/mapper" targetProject="src/main/outer/">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!-- 生成 Mapper XML 的位置 -->
        <javaClientGenerator targetPackage="com.suyh.mapper"
                             type="XMLMAPPER" targetProject="src/main/outer">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>


        <!-- 需要生成的实体类对应的表名，多个实体类复制多份该配置即可 -->
        <!-- 每一个table 标签对应数据库中的一张表 -->
        <!-- 客户/供应商基本信息表结构 -->
        <table tableName="crm_customer_info"
               enableCountByExample="true"
               enableUpdateByExample="true"
               enableDeleteByExample="true"
               enableSelectByExample="true"
               selectByExampleQueryId="true"

               enableDeleteByPrimaryKey="true"
               enableInsert="true"
               enableSelectByPrimaryKey="true"

               enableUpdateByPrimaryKey="false">
            <property name="rootClass" value="com.suyh.version03.model.BaseModel"/>
            <!-- 主键生成方式 -->
            <!--            <generatedKey column="customer_id" sqlStatement="Mysql" identity="true"/>-->
        </table>

        <!-- 结算信息表结构 -->
        <table tableName="crm_settle_money_info"
               enableCountByExample="true"
               enableUpdateByExample="true"
               enableDeleteByExample="true"
               enableSelectByExample="true"
               selectByExampleQueryId="true"

               enableDeleteByPrimaryKey="true"
               enableInsert="true"
               enableSelectByPrimaryKey="true"

               enableUpdateByPrimaryKey="false">
        </table>

        <!-- 联系人信息 -->
        <table tableName="crm_contacts_info"
               enableCountByExample="true"
               enableUpdateByExample="true"
               enableDeleteByExample="true"
               enableSelectByExample="true"
               selectByExampleQueryId="true"

               enableDeleteByPrimaryKey="true"
               enableInsert="true"
               enableSelectByPrimaryKey="true"

               enableUpdateByPrimaryKey="false">
        </table>

    </context>

</generatorConfiguration>